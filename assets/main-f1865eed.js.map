{"version":3,"file":"main-f1865eed.js","sources":["../../src/c.ts","../../src/b.ts","../../node_modules/@workadventure/quests/dist/quests.js","../../src/main.ts"],"sourcesContent":["/// <reference types=\"@workadventure/iframe-api-typings\" />\n\nlet currentPopup: any;\n\nexport const config = [\n    {\n        zone: 'fireplacezone',\n        message: 'Hey! Is this office cold?',\n        cta: [\n            {\n                label: 'Yes',\n                className: 'primary',\n                callback: () => {WA.room.showLayer('others/fire');}\n            },\n            {\n                label: 'No',\n                className: 'primary',\n                callback: () => {WA.room.hideLayer('others/fire');}\n            }\n        ]\n    },\n]\n\nexport function openPopup(zoneName: string, popupName: string) {\n    const zone = config.find((item) => {\n        return item.zone == zoneName\n    });\n    if (typeof zone !== 'undefined') {\n        // @ts-ignore otherwise we can't use zone.cta object\n        currentPopup = WA.ui.openPopup(popupName, zone.message, zone.cta)\n\n    }\n}\n\nexport function closePopup(){\n    if (typeof currentPopup !== undefined) {\n        currentPopup.close();\n        currentPopup = undefined;\n    }\n}","/// <reference types=\"@workadventure/iframe-api-typings\" \n\nexport function day_night_cycle(dayFolder: string, nightFolder: string) {\n    let today = new Date();\n    let time = today.getHours();\n    if (time >= 17 && time <= 6) {\n        WA.room.hideLayer(dayFolder);\n        WA.room.showLayer(nightFolder);\n    }\n    else{\n        WA.room.hideLayer(nightFolder);\n        WA.room.showLayer(dayFolder);    \n    }\n}","let r = \"https://admin.workadventu.re\";\nfunction c(e) {\n  r = e;\n}\nfunction n() {\n  const e = WA.player.userRoomToken;\n  if (e === void 0)\n    throw new Error(\n      \"No userRoomToken found. The quests plugin can only work with WorkAdventure SAAS edition (at https://play.workadventu.re).\"\n    );\n  return e;\n}\nasync function d(e) {\n  const t = new URL(`/api/quests/${e}`, r);\n  t.search = new URLSearchParams({ room: WA.room.id }).toString();\n  const o = await fetch(t, {\n    method: \"GET\",\n    headers: {\n      Authorization: n()\n    }\n  });\n  if (!o.ok)\n    throw new Error(`An error occurred. HTTP Code: ${o.status} ${o.statusText}.`);\n  return await o.json();\n}\nasync function w(e) {\n  const t = new URL(`/api/quests/${e}/leaderboard`, r);\n  t.search = new URLSearchParams({ room: WA.room.id }).toString();\n  const o = await fetch(t, {\n    method: \"GET\",\n    headers: {\n      Authorization: n()\n    }\n  });\n  if (!o.ok)\n    throw new Error(`An error occurred. HTTP Code: ${o.status} ${o.statusText}.`);\n  return await o.json();\n}\nfunction h(e) {\n  const t = new URL(`/quests/${e}/leaderboard`, r);\n  return t.search = new URLSearchParams({ room: WA.room.id, token: n() }).toString(), t;\n}\nasync function l(e, t) {\n  if (!WA.player.isLogged)\n    throw new Error(\"You must be logged to gain XP.\");\n  const o = new URL(`/api/quests/${e}/level-up`, r), a = await fetch(o, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: n()\n    },\n    body: JSON.stringify({ xp: t })\n  });\n  if (!a.ok)\n    throw new Error(`An error occurred. HTTP Code: ${a.status} ${a.statusText}.`);\n  const s = await a.json();\n  return s.awardedBadges.length > 0 && (async () => {\n    for (const i of s.awardedBadges)\n      await u(e, i);\n  })().catch((i) => {\n    console.error(i);\n  }), s;\n}\nasync function u(e, t) {\n  const o = new URL(`/quests/${e}/badge/${t}/congratulations`, r);\n  o.search = new URLSearchParams({ token: n() }).toString(), await WA.ui.website.open({\n    url: o.toString(),\n    position: {\n      vertical: \"middle\",\n      horizontal: \"middle\"\n    },\n    allowApi: !0,\n    visible: !0,\n    size: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  });\n}\nexport {\n  w as getLeaderboard,\n  h as getLeaderboardURL,\n  d as getQuest,\n  l as levelUp,\n  c as setQuestBaseUrl\n};\n","/// <reference types=\"@workadventure/iframe-api-typings\" />\n\nimport { bootstrapExtra } from \"@workadventure/scripting-api-extra\";\n\nimport { openPopup , closePopup} from \"./c\";\nimport {day_night_cycle} from \"./b\";\nimport { levelUp } from \"@workadventure/quests\";\n\nconsole.log('Script started successfully');\n\n// Waiting for the API to be ready\nWA.onInit().then(() => {\n\n    if(WA.player.tags.includes(\"team\")) {\n        WA.player.setOutlineColor(0, 119, 141);\n    }\n    \n    let currentZone: string;\n    WA.room.area.onEnter('fireplacezone').subscribe (() => {\n        //console.log('   uhiuiiuh        iuh iuiuh          uihuih');\n        currentZone = 'fireplacezone';\n        openPopup(currentZone, currentZone + 'Popup');\n    });\n    \n    levelUp('Up-time-meta',1);\n    WA.room.area.onLeave('fireplacezone').subscribe(() => {\n        closePopup();\n    });\n\n    \n    //This function will automatically change day mode into night mode\n    //folders for the inputs: first day folder, second night folder.\n    //In each folder, the layers should be related to the state of day and night.\n    day_night_cycle(\"\",\"\");\n\n    // The line below bootstraps the Scripting API Extra library that adds a number of advanced properties/features to WorkAdventure\n    bootstrapExtra().then(() => {\n        console.log('Scripting API Extra ready');\n    }).catch(e => console.error(e));\n\n}).catch(e => console.error(e));\n\nexport {};\n"],"names":["currentPopup","config","openPopup","zoneName","popupName","zone","item","closePopup","day_night_cycle","dayFolder","nightFolder","time","r","n","l","t","o","a","s","u","currentZone","levelUp","bootstrapExtra","e"],"mappings":"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","x_google_ignoreList":[2]}